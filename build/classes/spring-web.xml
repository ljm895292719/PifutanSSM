<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven />
	<!-- 启用注解形式如：@Autowired -->
	<context:annotation-config />
	<!-- 访问默认首页 -->
	<mvc:default-servlet-handler />

	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png (2)允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />

	<!-- 3.配置jsp 显示ViewResolver -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".html" />
	</bean>

	<!-- 4.扫描web相关的bean，过滤器自动组件扫描，即不使用@Component就可以了 -->
	<context:component-scan base-package="com.pifutan">
		<context:include-filter type="regex"
			expression="com.pifutan.entity.*" />
		<context:include-filter type="regex"
			expression="com.pifutan.ientity.*" />
		<context:include-filter type="regex"
			expression="com.pifutan.dao.*" />
		<context:include-filter type="regex"
			expression="com.pifutan.dto.*" />
		<context:include-filter type="regex"
			expression="com.pifutan.service.*" />
		<context:include-filter type="regex"
			expression="com.pifutan.controller.*" />
		<context:include-filter type="regex"
			expression="com.pifutan.interceptor.*" />
	</context:component-scan>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器，顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.pifutan.interceptor.PifutanHandlerInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.pifutan.interceptor.PifutanHandlerInterceptor2"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
</beans>